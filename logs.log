2025-05-28 12:57:39,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 12:57:39,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 12:57:39,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 12:57:39,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 13:19:12,389:INFO:Initializing load_model()
2025-05-28 13:19:12,390:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 13:19:12,646:INFO:Initializing load_model()
2025-05-28 13:19:12,647:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 13:19:12,674:INFO:Initializing load_model()
2025-05-28 13:19:12,674:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 13:19:12,682:INFO:Initializing load_model()
2025-05-28 13:19:12,683:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 13:19:12,699:INFO:Initializing load_model()
2025-05-28 13:19:12,699:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 13:19:12,707:INFO:Initializing load_model()
2025-05-28 13:19:12,708:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:00,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:08:00,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:08:00,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:08:00,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:08:43,535:INFO:Initializing load_model()
2025-05-28 16:08:43,535:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:43,656:INFO:Initializing load_model()
2025-05-28 16:08:43,657:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:43,659:INFO:Initializing load_model()
2025-05-28 16:08:43,659:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:43,670:INFO:Initializing load_model()
2025-05-28 16:08:43,670:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:43,690:INFO:Initializing load_model()
2025-05-28 16:08:43,690:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:08:43,695:INFO:Initializing load_model()
2025-05-28 16:08:43,695:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:10,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:25:10,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:25:10,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:25:10,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:25:16,342:INFO:Initializing load_model()
2025-05-28 16:25:16,342:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,461:INFO:Initializing load_model()
2025-05-28 16:25:16,461:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,463:INFO:Initializing load_model()
2025-05-28 16:25:16,463:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,518:INFO:Initializing predict_model()
2025-05-28 16:25:16,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B72838AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B72884680>)
2025-05-28 16:25:16,518:INFO:Checking exceptions
2025-05-28 16:25:16,518:INFO:Preloading libraries
2025-05-28 16:25:16,519:INFO:Set up data.
2025-05-28 16:25:16,541:INFO:Set up index.
2025-05-28 16:25:16,919:INFO:Initializing load_model()
2025-05-28 16:25:16,919:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,942:INFO:Initializing load_model()
2025-05-28 16:25:16,943:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,952:INFO:Initializing load_model()
2025-05-28 16:25:16,952:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,954:INFO:Initializing load_model()
2025-05-28 16:25:16,954:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:16,970:INFO:Initializing predict_model()
2025-05-28 16:25:16,970:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B7282DF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B72386F20>)
2025-05-28 16:25:16,970:INFO:Checking exceptions
2025-05-28 16:25:16,970:INFO:Preloading libraries
2025-05-28 16:25:16,970:INFO:Set up data.
2025-05-28 16:25:17,000:INFO:Set up index.
2025-05-28 16:25:17,182:INFO:Initializing load_model()
2025-05-28 16:25:17,182:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:17,205:INFO:Initializing predict_model()
2025-05-28 16:25:17,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B6EC68D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B72863B00>)
2025-05-28 16:25:17,205:INFO:Checking exceptions
2025-05-28 16:25:17,205:INFO:Preloading libraries
2025-05-28 16:25:17,205:INFO:Set up data.
2025-05-28 16:25:17,217:INFO:Set up index.
2025-05-28 16:25:17,356:INFO:Initializing load_model()
2025-05-28 16:25:17,356:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:17,373:INFO:Initializing predict_model()
2025-05-28 16:25:17,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B5E2E8C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B72885940>)
2025-05-28 16:25:17,373:INFO:Checking exceptions
2025-05-28 16:25:17,373:INFO:Preloading libraries
2025-05-28 16:25:17,373:INFO:Set up data.
2025-05-28 16:25:17,381:INFO:Set up index.
2025-05-28 16:25:17,529:INFO:Initializing load_model()
2025-05-28 16:25:17,530:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:17,546:INFO:Initializing predict_model()
2025-05-28 16:25:17,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B72762CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B72863B00>)
2025-05-28 16:25:17,547:INFO:Checking exceptions
2025-05-28 16:25:17,547:INFO:Preloading libraries
2025-05-28 16:25:17,547:INFO:Set up data.
2025-05-28 16:25:17,559:INFO:Set up index.
2025-05-28 16:25:17,707:INFO:Initializing load_model()
2025-05-28 16:25:17,707:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:25:17,716:INFO:Initializing predict_model()
2025-05-28 16:25:17,716:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B71F54F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B71E76AC0>)
2025-05-28 16:25:17,716:INFO:Checking exceptions
2025-05-28 16:25:17,716:INFO:Preloading libraries
2025-05-28 16:25:17,716:INFO:Set up data.
2025-05-28 16:25:17,740:INFO:Set up index.
2025-05-28 16:38:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:38:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:38:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:38:40,841:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 16:38:50,434:INFO:Initializing load_model()
2025-05-28 16:38:50,435:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:50,558:INFO:Initializing load_model()
2025-05-28 16:38:50,558:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:50,560:INFO:Initializing load_model()
2025-05-28 16:38:50,560:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:50,580:INFO:Initializing predict_model()
2025-05-28 16:38:50,580:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7D8EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84A0C20>)
2025-05-28 16:38:50,580:INFO:Checking exceptions
2025-05-28 16:38:50,580:INFO:Preloading libraries
2025-05-28 16:38:50,580:INFO:Set up data.
2025-05-28 16:38:50,611:INFO:Set up index.
2025-05-28 16:38:51,006:INFO:Initializing load_model()
2025-05-28 16:38:51,006:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,015:INFO:Initializing load_model()
2025-05-28 16:38:51,015:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,028:INFO:Initializing load_model()
2025-05-28 16:38:51,028:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,030:INFO:Initializing load_model()
2025-05-28 16:38:51,031:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,051:INFO:Initializing predict_model()
2025-05-28 16:38:51,051:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B84AF210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7FBB560>)
2025-05-28 16:38:51,051:INFO:Checking exceptions
2025-05-28 16:38:51,051:INFO:Preloading libraries
2025-05-28 16:38:51,051:INFO:Set up data.
2025-05-28 16:38:51,072:INFO:Set up index.
2025-05-28 16:38:51,225:INFO:Initializing load_model()
2025-05-28 16:38:51,225:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,258:INFO:Initializing predict_model()
2025-05-28 16:38:51,258:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7D4A2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7FBB560>)
2025-05-28 16:38:51,258:INFO:Checking exceptions
2025-05-28 16:38:51,258:INFO:Preloading libraries
2025-05-28 16:38:51,258:INFO:Set up data.
2025-05-28 16:38:51,269:INFO:Set up index.
2025-05-28 16:38:51,406:INFO:Initializing load_model()
2025-05-28 16:38:51,406:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,435:INFO:Initializing predict_model()
2025-05-28 16:38:51,436:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027493334090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84A2DE0>)
2025-05-28 16:38:51,436:INFO:Checking exceptions
2025-05-28 16:38:51,436:INFO:Preloading libraries
2025-05-28 16:38:51,436:INFO:Set up data.
2025-05-28 16:38:51,453:INFO:Set up index.
2025-05-28 16:38:51,581:INFO:Initializing load_model()
2025-05-28 16:38:51,581:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,605:INFO:Initializing predict_model()
2025-05-28 16:38:51,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274A3F07A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7FBB560>)
2025-05-28 16:38:51,605:INFO:Checking exceptions
2025-05-28 16:38:51,606:INFO:Preloading libraries
2025-05-28 16:38:51,606:INFO:Set up data.
2025-05-28 16:38:51,623:INFO:Set up index.
2025-05-28 16:38:51,741:INFO:Initializing load_model()
2025-05-28 16:38:51,741:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,763:INFO:Initializing predict_model()
2025-05-28 16:38:51,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027492178390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7D62E80>)
2025-05-28 16:38:51,763:INFO:Checking exceptions
2025-05-28 16:38:51,763:INFO:Preloading libraries
2025-05-28 16:38:51,764:INFO:Set up data.
2025-05-28 16:38:51,776:INFO:Set up index.
2025-05-28 16:38:51,959:INFO:Initializing load_model()
2025-05-28 16:38:51,959:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:38:51,978:INFO:Initializing predict_model()
2025-05-28 16:38:51,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B80E7390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B85089A0>)
2025-05-28 16:38:51,978:INFO:Checking exceptions
2025-05-28 16:38:51,978:INFO:Preloading libraries
2025-05-28 16:38:51,978:INFO:Set up data.
2025-05-28 16:38:51,988:INFO:Set up index.
2025-05-28 16:39:17,643:INFO:Initializing load_model()
2025-05-28 16:39:17,643:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:17,672:INFO:Initializing load_model()
2025-05-28 16:39:17,672:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:17,674:INFO:Initializing load_model()
2025-05-28 16:39:17,674:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:17,696:INFO:Initializing predict_model()
2025-05-28 16:39:17,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8568990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84F13A0>)
2025-05-28 16:39:17,696:INFO:Checking exceptions
2025-05-28 16:39:17,696:INFO:Preloading libraries
2025-05-28 16:39:17,697:INFO:Set up data.
2025-05-28 16:39:17,709:INFO:Set up index.
2025-05-28 16:39:17,847:INFO:Initializing load_model()
2025-05-28 16:39:17,848:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,102:INFO:Initializing load_model()
2025-05-28 16:39:18,103:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,110:INFO:Initializing load_model()
2025-05-28 16:39:18,110:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,111:INFO:Initializing load_model()
2025-05-28 16:39:18,111:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,129:INFO:Initializing predict_model()
2025-05-28 16:39:18,129:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8418250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7FB9800>)
2025-05-28 16:39:18,129:INFO:Checking exceptions
2025-05-28 16:39:18,129:INFO:Preloading libraries
2025-05-28 16:39:18,129:INFO:Set up data.
2025-05-28 16:39:18,139:INFO:Set up index.
2025-05-28 16:39:18,261:INFO:Initializing load_model()
2025-05-28 16:39:18,262:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,283:INFO:Initializing predict_model()
2025-05-28 16:39:18,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027492147E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B85387C0>)
2025-05-28 16:39:18,284:INFO:Checking exceptions
2025-05-28 16:39:18,284:INFO:Preloading libraries
2025-05-28 16:39:18,284:INFO:Set up data.
2025-05-28 16:39:18,295:INFO:Set up index.
2025-05-28 16:39:18,403:INFO:Initializing load_model()
2025-05-28 16:39:18,403:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,435:INFO:Initializing predict_model()
2025-05-28 16:39:18,435:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274A23EBBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B7FB9800>)
2025-05-28 16:39:18,435:INFO:Checking exceptions
2025-05-28 16:39:18,435:INFO:Preloading libraries
2025-05-28 16:39:18,436:INFO:Set up data.
2025-05-28 16:39:18,442:INFO:Set up index.
2025-05-28 16:39:18,575:INFO:Initializing load_model()
2025-05-28 16:39:18,575:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,596:INFO:Initializing predict_model()
2025-05-28 16:39:18,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7D65A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84F1760>)
2025-05-28 16:39:18,596:INFO:Checking exceptions
2025-05-28 16:39:18,596:INFO:Preloading libraries
2025-05-28 16:39:18,596:INFO:Set up data.
2025-05-28 16:39:18,610:INFO:Set up index.
2025-05-28 16:39:18,729:INFO:Initializing load_model()
2025-05-28 16:39:18,729:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,746:INFO:Initializing predict_model()
2025-05-28 16:39:18,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027493302F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B853B880>)
2025-05-28 16:39:18,746:INFO:Checking exceptions
2025-05-28 16:39:18,746:INFO:Preloading libraries
2025-05-28 16:39:18,746:INFO:Set up data.
2025-05-28 16:39:18,775:INFO:Set up index.
2025-05-28 16:39:18,924:INFO:Initializing load_model()
2025-05-28 16:39:18,924:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:18,935:INFO:Initializing predict_model()
2025-05-28 16:39:18,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8122C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B866D800>)
2025-05-28 16:39:18,935:INFO:Checking exceptions
2025-05-28 16:39:18,935:INFO:Preloading libraries
2025-05-28 16:39:18,935:INFO:Set up data.
2025-05-28 16:39:18,935:INFO:Set up index.
2025-05-28 16:39:25,954:INFO:Initializing load_model()
2025-05-28 16:39:25,954:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,025:INFO:Initializing load_model()
2025-05-28 16:39:26,026:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,027:INFO:Initializing load_model()
2025-05-28 16:39:26,027:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,085:INFO:Initializing predict_model()
2025-05-28 16:39:26,085:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027492156450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B8663880>)
2025-05-28 16:39:26,085:INFO:Checking exceptions
2025-05-28 16:39:26,085:INFO:Preloading libraries
2025-05-28 16:39:26,085:INFO:Set up data.
2025-05-28 16:39:26,105:INFO:Set up index.
2025-05-28 16:39:26,263:INFO:Initializing load_model()
2025-05-28 16:39:26,263:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,702:INFO:Initializing load_model()
2025-05-28 16:39:26,702:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,747:INFO:Initializing load_model()
2025-05-28 16:39:26,747:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,747:INFO:Initializing load_model()
2025-05-28 16:39:26,747:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,821:INFO:Initializing predict_model()
2025-05-28 16:39:26,821:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B848FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84A2160>)
2025-05-28 16:39:26,821:INFO:Checking exceptions
2025-05-28 16:39:26,821:INFO:Preloading libraries
2025-05-28 16:39:26,821:INFO:Set up data.
2025-05-28 16:39:26,833:INFO:Set up index.
2025-05-28 16:39:26,967:INFO:Initializing load_model()
2025-05-28 16:39:26,967:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:26,999:INFO:Initializing predict_model()
2025-05-28 16:39:26,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027493341AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B850A020>)
2025-05-28 16:39:26,999:INFO:Checking exceptions
2025-05-28 16:39:26,999:INFO:Preloading libraries
2025-05-28 16:39:26,999:INFO:Set up data.
2025-05-28 16:39:27,021:INFO:Set up index.
2025-05-28 16:39:27,153:INFO:Initializing load_model()
2025-05-28 16:39:27,153:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:27,203:INFO:Initializing predict_model()
2025-05-28 16:39:27,203:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8498510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B84A2160>)
2025-05-28 16:39:27,203:INFO:Checking exceptions
2025-05-28 16:39:27,203:INFO:Preloading libraries
2025-05-28 16:39:27,204:INFO:Set up data.
2025-05-28 16:39:27,215:INFO:Set up index.
2025-05-28 16:39:27,342:INFO:Initializing load_model()
2025-05-28 16:39:27,342:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:27,374:INFO:Initializing predict_model()
2025-05-28 16:39:27,374:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7D65A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B8065620>)
2025-05-28 16:39:27,374:INFO:Checking exceptions
2025-05-28 16:39:27,374:INFO:Preloading libraries
2025-05-28 16:39:27,374:INFO:Set up data.
2025-05-28 16:39:27,396:INFO:Set up index.
2025-05-28 16:39:27,530:INFO:Initializing load_model()
2025-05-28 16:39:27,530:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:27,571:INFO:Initializing predict_model()
2025-05-28 16:39:27,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8450AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B8663BA0>)
2025-05-28 16:39:27,571:INFO:Checking exceptions
2025-05-28 16:39:27,571:INFO:Preloading libraries
2025-05-28 16:39:27,571:INFO:Set up data.
2025-05-28 16:39:27,581:INFO:Set up index.
2025-05-28 16:39:27,741:INFO:Initializing load_model()
2025-05-28 16:39:27,741:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:27,780:INFO:Initializing predict_model()
2025-05-28 16:39:27,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B854C950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B8502CA0>)
2025-05-28 16:39:27,780:INFO:Checking exceptions
2025-05-28 16:39:27,780:INFO:Preloading libraries
2025-05-28 16:39:27,780:INFO:Set up data.
2025-05-28 16:39:27,786:INFO:Set up index.
2025-05-28 16:39:47,350:INFO:Initializing load_model()
2025-05-28 16:39:47,350:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:47,413:INFO:Initializing load_model()
2025-05-28 16:39:47,413:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:47,414:INFO:Initializing load_model()
2025-05-28 16:39:47,415:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:47,488:INFO:Initializing predict_model()
2025-05-28 16:39:47,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B73F6690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B8500FE0>)
2025-05-28 16:39:47,488:INFO:Checking exceptions
2025-05-28 16:39:47,488:INFO:Preloading libraries
2025-05-28 16:39:47,488:INFO:Set up data.
2025-05-28 16:39:47,507:INFO:Set up index.
2025-05-28 16:39:47,671:INFO:Initializing load_model()
2025-05-28 16:39:47,671:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,029:INFO:Initializing load_model()
2025-05-28 16:39:48,029:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,060:INFO:Initializing load_model()
2025-05-28 16:39:48,075:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,075:INFO:Initializing load_model()
2025-05-28 16:39:48,075:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,127:INFO:Initializing predict_model()
2025-05-28 16:39:48,127:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7A08290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027492170400>)
2025-05-28 16:39:48,127:INFO:Checking exceptions
2025-05-28 16:39:48,127:INFO:Preloading libraries
2025-05-28 16:39:48,127:INFO:Set up data.
2025-05-28 16:39:48,132:INFO:Set up index.
2025-05-28 16:39:48,278:INFO:Initializing load_model()
2025-05-28 16:39:48,278:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,310:INFO:Initializing predict_model()
2025-05-28 16:39:48,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274A41CEB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027492170400>)
2025-05-28 16:39:48,310:INFO:Checking exceptions
2025-05-28 16:39:48,310:INFO:Preloading libraries
2025-05-28 16:39:48,310:INFO:Set up data.
2025-05-28 16:39:48,332:INFO:Set up index.
2025-05-28 16:39:48,483:INFO:Initializing load_model()
2025-05-28 16:39:48,483:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,528:INFO:Initializing predict_model()
2025-05-28 16:39:48,528:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B8418050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027492170360>)
2025-05-28 16:39:48,528:INFO:Checking exceptions
2025-05-28 16:39:48,528:INFO:Preloading libraries
2025-05-28 16:39:48,528:INFO:Set up data.
2025-05-28 16:39:48,537:INFO:Set up index.
2025-05-28 16:39:48,671:INFO:Initializing load_model()
2025-05-28 16:39:48,671:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,718:INFO:Initializing predict_model()
2025-05-28 16:39:48,718:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B7FFA990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027492170400>)
2025-05-28 16:39:48,718:INFO:Checking exceptions
2025-05-28 16:39:48,718:INFO:Preloading libraries
2025-05-28 16:39:48,718:INFO:Set up data.
2025-05-28 16:39:48,741:INFO:Set up index.
2025-05-28 16:39:48,889:INFO:Initializing load_model()
2025-05-28 16:39:48,889:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:48,935:INFO:Initializing predict_model()
2025-05-28 16:39:48,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002748FFD40D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027492170360>)
2025-05-28 16:39:48,935:INFO:Checking exceptions
2025-05-28 16:39:48,935:INFO:Preloading libraries
2025-05-28 16:39:48,935:INFO:Set up data.
2025-05-28 16:39:48,948:INFO:Set up index.
2025-05-28 16:39:49,106:INFO:Initializing load_model()
2025-05-28 16:39:49,107:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 16:39:49,138:INFO:Initializing predict_model()
2025-05-28 16:39:49,138:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000274B852EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274B85FB1A0>)
2025-05-28 16:39:49,138:INFO:Checking exceptions
2025-05-28 16:39:49,138:INFO:Preloading libraries
2025-05-28 16:39:49,138:INFO:Set up data.
2025-05-28 16:39:49,159:INFO:Set up index.
2025-05-28 19:55:53,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 19:55:53,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 19:55:53,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 19:55:53,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 19:56:12,004:INFO:Initializing load_model()
2025-05-28 19:56:12,004:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,120:INFO:Initializing load_model()
2025-05-28 19:56:12,120:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,120:INFO:Initializing load_model()
2025-05-28 19:56:12,120:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,153:INFO:Initializing predict_model()
2025-05-28 19:56:12,153:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BB329C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBCF94E0>)
2025-05-28 19:56:12,153:INFO:Checking exceptions
2025-05-28 19:56:12,153:INFO:Preloading libraries
2025-05-28 19:56:12,153:INFO:Set up data.
2025-05-28 19:56:12,153:INFO:Set up index.
2025-05-28 19:56:12,542:INFO:Initializing load_model()
2025-05-28 19:56:12,542:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,558:INFO:Initializing load_model()
2025-05-28 19:56:12,558:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,564:INFO:Initializing load_model()
2025-05-28 19:56:12,564:INFO:load_model(model_name=models\standard_scaler, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,566:INFO:Initializing load_model()
2025-05-28 19:56:12,566:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,580:INFO:Initializing predict_model()
2025-05-28 19:56:12,580:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3B81C6C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBA24680>)
2025-05-28 19:56:12,580:INFO:Checking exceptions
2025-05-28 19:56:12,580:INFO:Preloading libraries
2025-05-28 19:56:12,580:INFO:Set up data.
2025-05-28 19:56:12,596:INFO:Set up index.
2025-05-28 19:56:12,778:INFO:Initializing load_model()
2025-05-28 19:56:12,778:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,797:INFO:Initializing predict_model()
2025-05-28 19:56:12,797:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3A4F143D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBA47E20>)
2025-05-28 19:56:12,797:INFO:Checking exceptions
2025-05-28 19:56:12,797:INFO:Preloading libraries
2025-05-28 19:56:12,797:INFO:Set up data.
2025-05-28 19:56:12,808:INFO:Set up index.
2025-05-28 19:56:12,940:INFO:Initializing load_model()
2025-05-28 19:56:12,940:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:12,956:INFO:Initializing predict_model()
2025-05-28 19:56:12,956:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3958F3B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBCFA700>)
2025-05-28 19:56:12,956:INFO:Checking exceptions
2025-05-28 19:56:12,957:INFO:Preloading libraries
2025-05-28 19:56:12,957:INFO:Set up data.
2025-05-28 19:56:12,971:INFO:Set up index.
2025-05-28 19:56:13,117:INFO:Initializing load_model()
2025-05-28 19:56:13,117:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:13,134:INFO:Initializing predict_model()
2025-05-28 19:56:13,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BB610DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBA47E20>)
2025-05-28 19:56:13,134:INFO:Checking exceptions
2025-05-28 19:56:13,134:INFO:Preloading libraries
2025-05-28 19:56:13,134:INFO:Set up data.
2025-05-28 19:56:13,147:INFO:Set up index.
2025-05-28 19:56:13,249:INFO:Initializing load_model()
2025-05-28 19:56:13,249:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:13,260:INFO:Initializing predict_model()
2025-05-28 19:56:13,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3A5D89C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBCFA660>)
2025-05-28 19:56:13,260:INFO:Checking exceptions
2025-05-28 19:56:13,260:INFO:Preloading libraries
2025-05-28 19:56:13,260:INFO:Set up data.
2025-05-28 19:56:13,277:INFO:Set up index.
2025-05-28 19:56:13,432:INFO:Initializing load_model()
2025-05-28 19:56:13,432:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-28 19:56:13,446:INFO:Initializing predict_model()
2025-05-28 19:56:13,448:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BB949D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D3BBD5D260>)
2025-05-28 19:56:13,448:INFO:Checking exceptions
2025-05-28 19:56:13,448:INFO:Preloading libraries
2025-05-28 19:56:13,448:INFO:Set up data.
2025-05-28 19:56:13,455:INFO:Set up index.
2025-05-28 21:30:33,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 21:30:33,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 21:30:33,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-28 21:30:33,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
