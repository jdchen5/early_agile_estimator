2025-05-29 10:52:11,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:52:11,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:52:11,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:52:11,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:55:23,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:55:23,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:55:23,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:55:23,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:59:02,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:59:02,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:59:02,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 10:59:02,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:04:45,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:04:45,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:04:45,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:04:45,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:12:09,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:12:09,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:12:09,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:12:09,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:15:04,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:15:04,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:15:04,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:15:04,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:15:23,108:INFO:Initializing load_model()
2025-05-29 11:15:23,108:INFO:load_model(model_name=models\modelA, platform=None, authentication=None, verbose=True)
2025-05-29 11:15:23,110:INFO:Initializing load_model()
2025-05-29 11:15:23,110:INFO:load_model(model_name=models\modelA, platform=None, authentication=None, verbose=True)
2025-05-29 11:15:23,114:INFO:Initializing load_model()
2025-05-29 11:15:23,114:INFO:load_model(model_name=models\modelA, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:29,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:23:29,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:23:29,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:23:29,623:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:23:53,581:INFO:Initializing load_model()
2025-05-29 11:23:53,581:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:53,871:INFO:Initializing load_model()
2025-05-29 11:23:53,871:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:53,970:INFO:Initializing load_model()
2025-05-29 11:23:53,971:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,730:INFO:Initializing load_model()
2025-05-29 11:23:54,730:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,761:INFO:Initializing load_model()
2025-05-29 11:23:54,761:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,809:INFO:Initializing load_model()
2025-05-29 11:23:54,809:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,850:INFO:Initializing load_model()
2025-05-29 11:23:54,850:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,902:INFO:Initializing load_model()
2025-05-29 11:23:54,902:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:54,933:INFO:Initializing load_model()
2025-05-29 11:23:54,933:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,015:INFO:Initializing load_model()
2025-05-29 11:23:55,015:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,053:INFO:Initializing load_model()
2025-05-29 11:23:55,053:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,089:INFO:Initializing load_model()
2025-05-29 11:23:55,089:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,127:INFO:Initializing load_model()
2025-05-29 11:23:55,127:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,169:INFO:Initializing load_model()
2025-05-29 11:23:55,169:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:55,200:INFO:Initializing load_model()
2025-05-29 11:23:55,200:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:57,958:INFO:Initializing load_model()
2025-05-29 11:23:57,958:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,022:INFO:Initializing load_model()
2025-05-29 11:23:58,022:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,059:INFO:Initializing load_model()
2025-05-29 11:23:58,059:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,707:INFO:Initializing load_model()
2025-05-29 11:23:58,707:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,755:INFO:Initializing load_model()
2025-05-29 11:23:58,755:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,800:INFO:Initializing load_model()
2025-05-29 11:23:58,800:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,839:INFO:Initializing load_model()
2025-05-29 11:23:58,839:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,873:INFO:Initializing load_model()
2025-05-29 11:23:58,873:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,917:INFO:Initializing load_model()
2025-05-29 11:23:58,917:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,955:INFO:Initializing load_model()
2025-05-29 11:23:58,955:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:58,991:INFO:Initializing load_model()
2025-05-29 11:23:58,991:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:59,028:INFO:Initializing load_model()
2025-05-29 11:23:59,028:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:59,058:INFO:Initializing load_model()
2025-05-29 11:23:59,058:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:59,101:INFO:Initializing load_model()
2025-05-29 11:23:59,102:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:23:59,138:INFO:Initializing load_model()
2025-05-29 11:23:59,139:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:29:40,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:29:40,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:29:40,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:29:40,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:34:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:34:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:34:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:34:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:35:15,314:INFO:Initializing load_model()
2025-05-29 11:35:15,314:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:15,467:INFO:Initializing load_model()
2025-05-29 11:35:15,467:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:15,522:INFO:Initializing load_model()
2025-05-29 11:35:15,522:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,231:INFO:Initializing load_model()
2025-05-29 11:35:16,231:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,272:INFO:Initializing load_model()
2025-05-29 11:35:16,272:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,319:INFO:Initializing load_model()
2025-05-29 11:35:16,319:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,355:INFO:Initializing load_model()
2025-05-29 11:35:16,355:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,402:INFO:Initializing load_model()
2025-05-29 11:35:16,402:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,453:INFO:Initializing load_model()
2025-05-29 11:35:16,453:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,497:INFO:Initializing load_model()
2025-05-29 11:35:16,497:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,535:INFO:Initializing load_model()
2025-05-29 11:35:16,535:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,559:INFO:Initializing load_model()
2025-05-29 11:35:16,559:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,611:INFO:Initializing load_model()
2025-05-29 11:35:16,611:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,652:INFO:Initializing load_model()
2025-05-29 11:35:16,652:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:35:16,693:INFO:Initializing load_model()
2025-05-29 11:35:16,693:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:27,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:45:27,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:45:27,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:45:27,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 11:45:52,072:INFO:Initializing load_model()
2025-05-29 11:45:52,072:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:52,212:INFO:Initializing load_model()
2025-05-29 11:45:52,212:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:52,288:INFO:Initializing predict_model()
2025-05-29 11:45:52,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDDE3D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C796C27740>)
2025-05-29 11:45:52,288:INFO:Checking exceptions
2025-05-29 11:45:52,288:INFO:Preloading libraries
2025-05-29 11:45:52,288:INFO:Set up data.
2025-05-29 11:45:52,338:INFO:Set up index.
2025-05-29 11:45:52,543:INFO:Initializing load_model()
2025-05-29 11:45:52,543:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:53,234:INFO:Initializing load_model()
2025-05-29 11:45:53,234:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:53,270:INFO:Initializing load_model()
2025-05-29 11:45:53,270:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:53,319:INFO:Initializing predict_model()
2025-05-29 11:45:53,319:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C027FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:53,320:INFO:Checking exceptions
2025-05-29 11:45:53,320:INFO:Preloading libraries
2025-05-29 11:45:53,320:INFO:Set up data.
2025-05-29 11:45:53,349:INFO:Set up index.
2025-05-29 11:45:53,513:INFO:Initializing load_model()
2025-05-29 11:45:53,513:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:53,558:INFO:Initializing predict_model()
2025-05-29 11:45:53,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE93F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7969F0400>)
2025-05-29 11:45:53,558:INFO:Checking exceptions
2025-05-29 11:45:53,558:INFO:Preloading libraries
2025-05-29 11:45:53,558:INFO:Set up data.
2025-05-29 11:45:53,574:INFO:Set up index.
2025-05-29 11:45:53,735:INFO:Initializing load_model()
2025-05-29 11:45:53,735:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:53,778:INFO:Initializing predict_model()
2025-05-29 11:45:53,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C027E590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:53,778:INFO:Checking exceptions
2025-05-29 11:45:53,778:INFO:Preloading libraries
2025-05-29 11:45:53,778:INFO:Set up data.
2025-05-29 11:45:53,811:INFO:Set up index.
2025-05-29 11:45:53,964:INFO:Initializing load_model()
2025-05-29 11:45:53,966:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:54,015:INFO:Initializing predict_model()
2025-05-29 11:45:54,015:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C0270210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7969F0400>)
2025-05-29 11:45:54,015:INFO:Checking exceptions
2025-05-29 11:45:54,015:INFO:Preloading libraries
2025-05-29 11:45:54,015:INFO:Set up data.
2025-05-29 11:45:54,036:INFO:Set up index.
2025-05-29 11:45:54,198:INFO:Initializing load_model()
2025-05-29 11:45:54,198:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:54,250:INFO:Initializing predict_model()
2025-05-29 11:45:54,250:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C0254A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:54,250:INFO:Checking exceptions
2025-05-29 11:45:54,251:INFO:Preloading libraries
2025-05-29 11:45:54,251:INFO:Set up data.
2025-05-29 11:45:54,272:INFO:Set up index.
2025-05-29 11:45:54,418:INFO:Initializing load_model()
2025-05-29 11:45:54,418:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:54,479:INFO:Initializing predict_model()
2025-05-29 11:45:54,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BC34D610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BDDEAB60>)
2025-05-29 11:45:54,479:INFO:Checking exceptions
2025-05-29 11:45:54,480:INFO:Preloading libraries
2025-05-29 11:45:54,480:INFO:Set up data.
2025-05-29 11:45:54,503:INFO:Set up index.
2025-05-29 11:45:54,660:INFO:Initializing load_model()
2025-05-29 11:45:54,661:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:54,711:INFO:Initializing predict_model()
2025-05-29 11:45:54,711:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C027F6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:54,711:INFO:Checking exceptions
2025-05-29 11:45:54,711:INFO:Preloading libraries
2025-05-29 11:45:54,711:INFO:Set up data.
2025-05-29 11:45:54,735:INFO:Set up index.
2025-05-29 11:45:54,895:INFO:Initializing load_model()
2025-05-29 11:45:54,895:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:54,937:INFO:Initializing predict_model()
2025-05-29 11:45:54,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C028E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BDDEAC00>)
2025-05-29 11:45:54,937:INFO:Checking exceptions
2025-05-29 11:45:54,937:INFO:Preloading libraries
2025-05-29 11:45:54,937:INFO:Set up data.
2025-05-29 11:45:54,964:INFO:Set up index.
2025-05-29 11:45:55,121:INFO:Initializing load_model()
2025-05-29 11:45:55,121:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:55,179:INFO:Initializing predict_model()
2025-05-29 11:45:55,179:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C02A2250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:55,179:INFO:Checking exceptions
2025-05-29 11:45:55,179:INFO:Preloading libraries
2025-05-29 11:45:55,180:INFO:Set up data.
2025-05-29 11:45:55,217:INFO:Set up index.
2025-05-29 11:45:55,387:INFO:Initializing load_model()
2025-05-29 11:45:55,387:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:55,438:INFO:Initializing predict_model()
2025-05-29 11:45:55,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C020F8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BDDEAC00>)
2025-05-29 11:45:55,438:INFO:Checking exceptions
2025-05-29 11:45:55,438:INFO:Preloading libraries
2025-05-29 11:45:55,441:INFO:Set up data.
2025-05-29 11:45:55,448:INFO:Set up index.
2025-05-29 11:45:55,620:INFO:Initializing load_model()
2025-05-29 11:45:55,620:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:55,679:INFO:Initializing predict_model()
2025-05-29 11:45:55,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C020EB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01C80E0>)
2025-05-29 11:45:55,679:INFO:Checking exceptions
2025-05-29 11:45:55,679:INFO:Preloading libraries
2025-05-29 11:45:55,679:INFO:Set up data.
2025-05-29 11:45:55,702:INFO:Set up index.
2025-05-29 11:45:55,874:INFO:Initializing load_model()
2025-05-29 11:45:55,874:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:55,920:INFO:Initializing predict_model()
2025-05-29 11:45:55,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE6BD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C023BC40>)
2025-05-29 11:45:55,920:INFO:Checking exceptions
2025-05-29 11:45:55,920:INFO:Preloading libraries
2025-05-29 11:45:55,921:INFO:Set up data.
2025-05-29 11:45:55,944:INFO:Set up index.
2025-05-29 11:45:57,378:INFO:Initializing load_model()
2025-05-29 11:45:57,379:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:57,409:INFO:Initializing load_model()
2025-05-29 11:45:57,409:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:57,441:INFO:Initializing predict_model()
2025-05-29 11:45:57,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C020EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C027A200>)
2025-05-29 11:45:57,442:INFO:Checking exceptions
2025-05-29 11:45:57,442:INFO:Preloading libraries
2025-05-29 11:45:57,442:INFO:Set up data.
2025-05-29 11:45:57,471:INFO:Set up index.
2025-05-29 11:45:57,921:INFO:Initializing load_model()
2025-05-29 11:45:57,921:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:57,933:INFO:Initializing load_model()
2025-05-29 11:45:57,933:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:57,941:INFO:Initializing load_model()
2025-05-29 11:45:57,941:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:57,950:INFO:Initializing predict_model()
2025-05-29 11:45:57,950:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BC77A650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C027AA20>)
2025-05-29 11:45:57,950:INFO:Checking exceptions
2025-05-29 11:45:57,950:INFO:Preloading libraries
2025-05-29 11:45:57,950:INFO:Set up data.
2025-05-29 11:45:57,987:INFO:Set up index.
2025-05-29 11:45:58,164:INFO:Initializing load_model()
2025-05-29 11:45:58,164:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:58,184:INFO:Initializing predict_model()
2025-05-29 11:45:58,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C0255D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:58,185:INFO:Checking exceptions
2025-05-29 11:45:58,185:INFO:Preloading libraries
2025-05-29 11:45:58,185:INFO:Set up data.
2025-05-29 11:45:58,208:INFO:Set up index.
2025-05-29 11:45:58,366:INFO:Initializing load_model()
2025-05-29 11:45:58,366:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:58,372:INFO:Initializing predict_model()
2025-05-29 11:45:58,372:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BFEA50D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:58,372:INFO:Checking exceptions
2025-05-29 11:45:58,372:INFO:Preloading libraries
2025-05-29 11:45:58,372:INFO:Set up data.
2025-05-29 11:45:58,404:INFO:Set up index.
2025-05-29 11:45:58,571:INFO:Initializing load_model()
2025-05-29 11:45:58,571:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:58,590:INFO:Initializing predict_model()
2025-05-29 11:45:58,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BFEA7590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:58,590:INFO:Checking exceptions
2025-05-29 11:45:58,590:INFO:Preloading libraries
2025-05-29 11:45:58,590:INFO:Set up data.
2025-05-29 11:45:58,606:INFO:Set up index.
2025-05-29 11:45:58,805:INFO:Initializing load_model()
2025-05-29 11:45:58,805:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:58,832:INFO:Initializing predict_model()
2025-05-29 11:45:58,832:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C023CED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:58,832:INFO:Checking exceptions
2025-05-29 11:45:58,832:INFO:Preloading libraries
2025-05-29 11:45:58,832:INFO:Set up data.
2025-05-29 11:45:58,854:INFO:Set up index.
2025-05-29 11:45:59,013:INFO:Initializing load_model()
2025-05-29 11:45:59,013:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:59,033:INFO:Initializing predict_model()
2025-05-29 11:45:59,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C796926050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:59,033:INFO:Checking exceptions
2025-05-29 11:45:59,033:INFO:Preloading libraries
2025-05-29 11:45:59,033:INFO:Set up data.
2025-05-29 11:45:59,053:INFO:Set up index.
2025-05-29 11:45:59,232:INFO:Initializing load_model()
2025-05-29 11:45:59,232:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:59,252:INFO:Initializing predict_model()
2025-05-29 11:45:59,252:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BFEA7710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:59,252:INFO:Checking exceptions
2025-05-29 11:45:59,252:INFO:Preloading libraries
2025-05-29 11:45:59,252:INFO:Set up data.
2025-05-29 11:45:59,272:INFO:Set up index.
2025-05-29 11:45:59,417:INFO:Initializing load_model()
2025-05-29 11:45:59,417:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:59,433:INFO:Initializing predict_model()
2025-05-29 11:45:59,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C0225810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:59,433:INFO:Checking exceptions
2025-05-29 11:45:59,433:INFO:Preloading libraries
2025-05-29 11:45:59,433:INFO:Set up data.
2025-05-29 11:45:59,448:INFO:Set up index.
2025-05-29 11:45:59,652:INFO:Initializing load_model()
2025-05-29 11:45:59,652:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:59,667:INFO:Initializing predict_model()
2025-05-29 11:45:59,667:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BCC5B750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:59,667:INFO:Checking exceptions
2025-05-29 11:45:59,667:INFO:Preloading libraries
2025-05-29 11:45:59,667:INFO:Set up data.
2025-05-29 11:45:59,698:INFO:Set up index.
2025-05-29 11:45:59,870:INFO:Initializing load_model()
2025-05-29 11:45:59,870:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:45:59,886:INFO:Initializing predict_model()
2025-05-29 11:45:59,886:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C02719D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:45:59,886:INFO:Checking exceptions
2025-05-29 11:45:59,886:INFO:Preloading libraries
2025-05-29 11:45:59,886:INFO:Set up data.
2025-05-29 11:45:59,903:INFO:Set up index.
2025-05-29 11:46:00,121:INFO:Initializing load_model()
2025-05-29 11:46:00,121:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:00,156:INFO:Initializing predict_model()
2025-05-29 11:46:00,161:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BC727E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C01F7380>)
2025-05-29 11:46:00,161:INFO:Checking exceptions
2025-05-29 11:46:00,161:INFO:Preloading libraries
2025-05-29 11:46:00,161:INFO:Set up data.
2025-05-29 11:46:00,215:INFO:Set up index.
2025-05-29 11:46:00,386:INFO:Initializing load_model()
2025-05-29 11:46:00,386:INFO:load_model(model_name=models\top_model_1_KNeighborsRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:00,417:INFO:Initializing predict_model()
2025-05-29 11:46:00,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BFEBAF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=13, weights='distance'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C023B600>)
2025-05-29 11:46:00,417:INFO:Checking exceptions
2025-05-29 11:46:00,417:INFO:Preloading libraries
2025-05-29 11:46:00,417:INFO:Set up data.
2025-05-29 11:46:00,443:INFO:Set up index.
2025-05-29 11:46:01,508:INFO:Initializing load_model()
2025-05-29 11:46:01,508:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,531:INFO:Initializing load_model()
2025-05-29 11:46:01,531:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,554:INFO:Initializing predict_model()
2025-05-29 11:46:01,554:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BCD5BB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BDDF9F80>)
2025-05-29 11:46:01,556:INFO:Checking exceptions
2025-05-29 11:46:01,556:INFO:Preloading libraries
2025-05-29 11:46:01,556:INFO:Set up data.
2025-05-29 11:46:01,580:INFO:Set up index.
2025-05-29 11:46:01,732:INFO:Initializing load_model()
2025-05-29 11:46:01,732:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,742:INFO:Initializing load_model()
2025-05-29 11:46:01,743:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,755:INFO:Initializing load_model()
2025-05-29 11:46:01,755:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,771:INFO:Initializing predict_model()
2025-05-29 11:46:01,771:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE8DCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BC8F1440>)
2025-05-29 11:46:01,771:INFO:Checking exceptions
2025-05-29 11:46:01,771:INFO:Preloading libraries
2025-05-29 11:46:01,771:INFO:Set up data.
2025-05-29 11:46:01,788:INFO:Set up index.
2025-05-29 11:46:01,919:INFO:Initializing load_model()
2025-05-29 11:46:01,919:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:01,952:INFO:Initializing predict_model()
2025-05-29 11:46:01,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE90350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7BC8F11C0>)
2025-05-29 11:46:01,952:INFO:Checking exceptions
2025-05-29 11:46:01,953:INFO:Preloading libraries
2025-05-29 11:46:01,953:INFO:Set up data.
2025-05-29 11:46:01,975:INFO:Set up index.
2025-05-29 11:46:02,105:INFO:Initializing load_model()
2025-05-29 11:46:02,105:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,126:INFO:Initializing predict_model()
2025-05-29 11:46:02,126:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7A89F05D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7A9502340>)
2025-05-29 11:46:02,126:INFO:Checking exceptions
2025-05-29 11:46:02,126:INFO:Preloading libraries
2025-05-29 11:46:02,126:INFO:Set up data.
2025-05-29 11:46:02,146:INFO:Set up index.
2025-05-29 11:46:02,277:INFO:Initializing load_model()
2025-05-29 11:46:02,277:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,294:INFO:Initializing predict_model()
2025-05-29 11:46:02,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BC784710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7953244A0>)
2025-05-29 11:46:02,294:INFO:Checking exceptions
2025-05-29 11:46:02,294:INFO:Preloading libraries
2025-05-29 11:46:02,294:INFO:Set up data.
2025-05-29 11:46:02,310:INFO:Set up index.
2025-05-29 11:46:02,447:INFO:Initializing load_model()
2025-05-29 11:46:02,447:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,466:INFO:Initializing predict_model()
2025-05-29 11:46:02,466:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BCD6C090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7A9502340>)
2025-05-29 11:46:02,466:INFO:Checking exceptions
2025-05-29 11:46:02,466:INFO:Preloading libraries
2025-05-29 11:46:02,466:INFO:Set up data.
2025-05-29 11:46:02,482:INFO:Set up index.
2025-05-29 11:46:02,614:INFO:Initializing load_model()
2025-05-29 11:46:02,614:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,622:INFO:Initializing predict_model()
2025-05-29 11:46:02,622:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BCD640D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7953244A0>)
2025-05-29 11:46:02,622:INFO:Checking exceptions
2025-05-29 11:46:02,622:INFO:Preloading libraries
2025-05-29 11:46:02,622:INFO:Set up data.
2025-05-29 11:46:02,654:INFO:Set up index.
2025-05-29 11:46:02,783:INFO:Initializing load_model()
2025-05-29 11:46:02,783:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,804:INFO:Initializing predict_model()
2025-05-29 11:46:02,804:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C0224E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7A9502340>)
2025-05-29 11:46:02,804:INFO:Checking exceptions
2025-05-29 11:46:02,804:INFO:Preloading libraries
2025-05-29 11:46:02,804:INFO:Set up data.
2025-05-29 11:46:02,827:INFO:Set up index.
2025-05-29 11:46:02,948:INFO:Initializing load_model()
2025-05-29 11:46:02,948:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:02,971:INFO:Initializing predict_model()
2025-05-29 11:46:02,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE7B810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7953244A0>)
2025-05-29 11:46:02,971:INFO:Checking exceptions
2025-05-29 11:46:02,971:INFO:Preloading libraries
2025-05-29 11:46:02,971:INFO:Set up data.
2025-05-29 11:46:02,995:INFO:Set up index.
2025-05-29 11:46:03,122:INFO:Initializing load_model()
2025-05-29 11:46:03,122:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:03,148:INFO:Initializing predict_model()
2025-05-29 11:46:03,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C795F44C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7A9502340>)
2025-05-29 11:46:03,148:INFO:Checking exceptions
2025-05-29 11:46:03,148:INFO:Preloading libraries
2025-05-29 11:46:03,148:INFO:Set up data.
2025-05-29 11:46:03,172:INFO:Set up index.
2025-05-29 11:46:03,298:INFO:Initializing load_model()
2025-05-29 11:46:03,298:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:03,318:INFO:Initializing predict_model()
2025-05-29 11:46:03,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7C023D990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7953244A0>)
2025-05-29 11:46:03,318:INFO:Checking exceptions
2025-05-29 11:46:03,318:INFO:Preloading libraries
2025-05-29 11:46:03,319:INFO:Set up data.
2025-05-29 11:46:03,339:INFO:Set up index.
2025-05-29 11:46:03,469:INFO:Initializing load_model()
2025-05-29 11:46:03,469:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:03,493:INFO:Initializing predict_model()
2025-05-29 11:46:03,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BDE8C710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7A9502340>)
2025-05-29 11:46:03,493:INFO:Checking exceptions
2025-05-29 11:46:03,493:INFO:Preloading libraries
2025-05-29 11:46:03,493:INFO:Set up data.
2025-05-29 11:46:03,511:INFO:Set up index.
2025-05-29 11:46:03,661:INFO:Initializing load_model()
2025-05-29 11:46:03,661:INFO:load_model(model_name=models\top_model_2_OrthogonalMatchingPursuit, platform=None, authentication=None, verbose=True)
2025-05-29 11:46:03,678:INFO:Initializing predict_model()
2025-05-29 11:46:03,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C7BC9A2A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C7C027A7A0>)
2025-05-29 11:46:03,678:INFO:Checking exceptions
2025-05-29 11:46:03,678:INFO:Preloading libraries
2025-05-29 11:46:03,678:INFO:Set up data.
2025-05-29 11:46:03,702:INFO:Set up index.
2025-05-29 13:07:57,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:07:57,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:07:57,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:07:57,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:21:23,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:21:23,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:21:23,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:21:23,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:21:40,145:INFO:Initializing load_model()
2025-05-29 13:21:40,145:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:40,297:INFO:Initializing load_model()
2025-05-29 13:21:40,297:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:40,355:INFO:Initializing predict_model()
2025-05-29 13:21:40,355:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EF4F810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021708B0C540>)
2025-05-29 13:21:40,355:INFO:Checking exceptions
2025-05-29 13:21:40,355:INFO:Preloading libraries
2025-05-29 13:21:40,356:INFO:Set up data.
2025-05-29 13:21:40,398:INFO:Set up index.
2025-05-29 13:21:40,566:INFO:Initializing load_model()
2025-05-29 13:21:40,567:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:41,246:INFO:Initializing load_model()
2025-05-29 13:21:41,246:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:41,288:INFO:Initializing load_model()
2025-05-29 13:21:41,288:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:41,342:INFO:Initializing predict_model()
2025-05-29 13:21:41,342:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323B3D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EFBB240>)
2025-05-29 13:21:41,342:INFO:Checking exceptions
2025-05-29 13:21:41,342:INFO:Preloading libraries
2025-05-29 13:21:41,343:INFO:Set up data.
2025-05-29 13:21:41,372:INFO:Set up index.
2025-05-29 13:21:41,545:INFO:Initializing load_model()
2025-05-29 13:21:41,545:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:41,589:INFO:Initializing predict_model()
2025-05-29 13:21:41,589:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732376CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021732327880>)
2025-05-29 13:21:41,589:INFO:Checking exceptions
2025-05-29 13:21:41,590:INFO:Preloading libraries
2025-05-29 13:21:41,590:INFO:Set up data.
2025-05-29 13:21:41,606:INFO:Set up index.
2025-05-29 13:21:41,776:INFO:Initializing load_model()
2025-05-29 13:21:41,776:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:41,831:INFO:Initializing predict_model()
2025-05-29 13:21:41,831:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323C5E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021732327BA0>)
2025-05-29 13:21:41,831:INFO:Checking exceptions
2025-05-29 13:21:41,831:INFO:Preloading libraries
2025-05-29 13:21:41,831:INFO:Set up data.
2025-05-29 13:21:41,859:INFO:Set up index.
2025-05-29 13:21:42,013:INFO:Initializing load_model()
2025-05-29 13:21:42,013:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:42,065:INFO:Initializing predict_model()
2025-05-29 13:21:42,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732350690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021708AE3F60>)
2025-05-29 13:21:42,065:INFO:Checking exceptions
2025-05-29 13:21:42,065:INFO:Preloading libraries
2025-05-29 13:21:42,067:INFO:Set up data.
2025-05-29 13:21:42,088:INFO:Set up index.
2025-05-29 13:21:42,245:INFO:Initializing load_model()
2025-05-29 13:21:42,245:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:42,291:INFO:Initializing predict_model()
2025-05-29 13:21:42,291:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217322FD210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EFBB560>)
2025-05-29 13:21:42,292:INFO:Checking exceptions
2025-05-29 13:21:42,292:INFO:Preloading libraries
2025-05-29 13:21:42,292:INFO:Set up data.
2025-05-29 13:21:42,315:INFO:Set up index.
2025-05-29 13:21:42,467:INFO:Initializing load_model()
2025-05-29 13:21:42,469:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:42,517:INFO:Initializing predict_model()
2025-05-29 13:21:42,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323BBC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021708AE3F60>)
2025-05-29 13:21:42,517:INFO:Checking exceptions
2025-05-29 13:21:42,517:INFO:Preloading libraries
2025-05-29 13:21:42,517:INFO:Set up data.
2025-05-29 13:21:42,542:INFO:Set up index.
2025-05-29 13:21:42,702:INFO:Initializing load_model()
2025-05-29 13:21:42,702:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:42,746:INFO:Initializing predict_model()
2025-05-29 13:21:42,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732366E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021732327CE0>)
2025-05-29 13:21:42,746:INFO:Checking exceptions
2025-05-29 13:21:42,746:INFO:Preloading libraries
2025-05-29 13:21:42,746:INFO:Set up data.
2025-05-29 13:21:42,768:INFO:Set up index.
2025-05-29 13:21:42,934:INFO:Initializing load_model()
2025-05-29 13:21:42,934:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:42,982:INFO:Initializing predict_model()
2025-05-29 13:21:42,982:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EA9B3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EF7E7A0>)
2025-05-29 13:21:42,982:INFO:Checking exceptions
2025-05-29 13:21:42,982:INFO:Preloading libraries
2025-05-29 13:21:42,982:INFO:Set up data.
2025-05-29 13:21:43,013:INFO:Set up index.
2025-05-29 13:21:43,184:INFO:Initializing load_model()
2025-05-29 13:21:43,184:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:43,231:INFO:Initializing predict_model()
2025-05-29 13:21:43,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732354E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021708AE3F60>)
2025-05-29 13:21:43,231:INFO:Checking exceptions
2025-05-29 13:21:43,231:INFO:Preloading libraries
2025-05-29 13:21:43,231:INFO:Set up data.
2025-05-29 13:21:43,265:INFO:Set up index.
2025-05-29 13:21:43,417:INFO:Initializing load_model()
2025-05-29 13:21:43,417:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:43,480:INFO:Initializing predict_model()
2025-05-29 13:21:43,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EFE5250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EF2F100>)
2025-05-29 13:21:43,480:INFO:Checking exceptions
2025-05-29 13:21:43,480:INFO:Preloading libraries
2025-05-29 13:21:43,480:INFO:Set up data.
2025-05-29 13:21:43,506:INFO:Set up index.
2025-05-29 13:21:43,668:INFO:Initializing load_model()
2025-05-29 13:21:43,668:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:43,715:INFO:Initializing predict_model()
2025-05-29 13:21:43,715:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323B1350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021708AE3F60>)
2025-05-29 13:21:43,715:INFO:Checking exceptions
2025-05-29 13:21:43,715:INFO:Preloading libraries
2025-05-29 13:21:43,716:INFO:Set up data.
2025-05-29 13:21:43,739:INFO:Set up index.
2025-05-29 13:21:43,915:INFO:Initializing load_model()
2025-05-29 13:21:43,915:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:43,949:INFO:Initializing predict_model()
2025-05-29 13:21:43,949:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021731FDFA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000217323D77E0>)
2025-05-29 13:21:43,949:INFO:Checking exceptions
2025-05-29 13:21:43,949:INFO:Preloading libraries
2025-05-29 13:21:43,949:INFO:Set up data.
2025-05-29 13:21:43,981:INFO:Set up index.
2025-05-29 13:21:54,171:INFO:Initializing load_model()
2025-05-29 13:21:54,171:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:54,223:INFO:Initializing load_model()
2025-05-29 13:21:54,223:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:54,270:INFO:Initializing predict_model()
2025-05-29 13:21:54,270:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EEFAFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EF2F100>)
2025-05-29 13:21:54,270:INFO:Checking exceptions
2025-05-29 13:21:54,270:INFO:Preloading libraries
2025-05-29 13:21:54,270:INFO:Set up data.
2025-05-29 13:21:54,293:INFO:Set up index.
2025-05-29 13:21:54,479:INFO:Initializing load_model()
2025-05-29 13:21:54,479:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,121:INFO:Initializing load_model()
2025-05-29 13:21:55,121:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,166:INFO:Initializing load_model()
2025-05-29 13:21:55,166:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,220:INFO:Initializing predict_model()
2025-05-29 13:21:55,221:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732352950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172E024A40>)
2025-05-29 13:21:55,221:INFO:Checking exceptions
2025-05-29 13:21:55,221:INFO:Preloading libraries
2025-05-29 13:21:55,221:INFO:Set up data.
2025-05-29 13:21:55,243:INFO:Set up index.
2025-05-29 13:21:55,402:INFO:Initializing load_model()
2025-05-29 13:21:55,402:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,466:INFO:Initializing predict_model()
2025-05-29 13:21:55,466:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021731FD1DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EFAF240>)
2025-05-29 13:21:55,466:INFO:Checking exceptions
2025-05-29 13:21:55,466:INFO:Preloading libraries
2025-05-29 13:21:55,466:INFO:Set up data.
2025-05-29 13:21:55,479:INFO:Set up index.
2025-05-29 13:21:55,699:INFO:Initializing load_model()
2025-05-29 13:21:55,699:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,747:INFO:Initializing predict_model()
2025-05-29 13:21:55,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323E57D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172E024A40>)
2025-05-29 13:21:55,747:INFO:Checking exceptions
2025-05-29 13:21:55,747:INFO:Preloading libraries
2025-05-29 13:21:55,747:INFO:Set up data.
2025-05-29 13:21:55,778:INFO:Set up index.
2025-05-29 13:21:55,933:INFO:Initializing load_model()
2025-05-29 13:21:55,933:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:55,985:INFO:Initializing predict_model()
2025-05-29 13:21:55,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323825D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000217323CDC60>)
2025-05-29 13:21:55,985:INFO:Checking exceptions
2025-05-29 13:21:55,986:INFO:Preloading libraries
2025-05-29 13:21:55,986:INFO:Set up data.
2025-05-29 13:21:56,008:INFO:Set up index.
2025-05-29 13:21:56,167:INFO:Initializing load_model()
2025-05-29 13:21:56,167:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:56,359:INFO:Initializing predict_model()
2025-05-29 13:21:56,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172ED0E150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172E024A40>)
2025-05-29 13:21:56,359:INFO:Checking exceptions
2025-05-29 13:21:56,359:INFO:Preloading libraries
2025-05-29 13:21:56,359:INFO:Set up data.
2025-05-29 13:21:56,402:INFO:Set up index.
2025-05-29 13:21:56,615:INFO:Initializing load_model()
2025-05-29 13:21:56,615:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:56,652:INFO:Initializing predict_model()
2025-05-29 13:21:56,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EAA4150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172E024A40>)
2025-05-29 13:21:56,652:INFO:Checking exceptions
2025-05-29 13:21:56,652:INFO:Preloading libraries
2025-05-29 13:21:56,661:INFO:Set up data.
2025-05-29 13:21:56,689:INFO:Set up index.
2025-05-29 13:21:56,848:INFO:Initializing load_model()
2025-05-29 13:21:56,848:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:56,890:INFO:Initializing predict_model()
2025-05-29 13:21:56,890:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EE97050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002171B2F94E0>)
2025-05-29 13:21:56,890:INFO:Checking exceptions
2025-05-29 13:21:56,890:INFO:Preloading libraries
2025-05-29 13:21:56,890:INFO:Set up data.
2025-05-29 13:21:56,923:INFO:Set up index.
2025-05-29 13:21:57,078:INFO:Initializing load_model()
2025-05-29 13:21:57,078:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:57,123:INFO:Initializing predict_model()
2025-05-29 13:21:57,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732306F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021709C567A0>)
2025-05-29 13:21:57,123:INFO:Checking exceptions
2025-05-29 13:21:57,123:INFO:Preloading libraries
2025-05-29 13:21:57,123:INFO:Set up data.
2025-05-29 13:21:57,162:INFO:Set up index.
2025-05-29 13:21:57,320:INFO:Initializing load_model()
2025-05-29 13:21:57,320:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:57,357:INFO:Initializing predict_model()
2025-05-29 13:21:57,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021732381E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172E024A40>)
2025-05-29 13:21:57,357:INFO:Checking exceptions
2025-05-29 13:21:57,357:INFO:Preloading libraries
2025-05-29 13:21:57,357:INFO:Set up data.
2025-05-29 13:21:57,386:INFO:Set up index.
2025-05-29 13:21:57,547:INFO:Initializing load_model()
2025-05-29 13:21:57,547:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:57,593:INFO:Initializing predict_model()
2025-05-29 13:21:57,594:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002172EFE7250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002171B2F94E0>)
2025-05-29 13:21:57,594:INFO:Checking exceptions
2025-05-29 13:21:57,594:INFO:Preloading libraries
2025-05-29 13:21:57,594:INFO:Set up data.
2025-05-29 13:21:57,616:INFO:Set up index.
2025-05-29 13:21:57,781:INFO:Initializing load_model()
2025-05-29 13:21:57,781:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:57,827:INFO:Initializing predict_model()
2025-05-29 13:21:57,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323073D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021709C567A0>)
2025-05-29 13:21:57,827:INFO:Checking exceptions
2025-05-29 13:21:57,827:INFO:Preloading libraries
2025-05-29 13:21:57,828:INFO:Set up data.
2025-05-29 13:21:57,850:INFO:Set up index.
2025-05-29 13:21:58,053:INFO:Initializing load_model()
2025-05-29 13:21:58,053:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 13:21:58,092:INFO:Initializing predict_model()
2025-05-29 13:21:58,092:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000217323052D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172EFB8E00>)
2025-05-29 13:21:58,092:INFO:Checking exceptions
2025-05-29 13:21:58,092:INFO:Preloading libraries
2025-05-29 13:21:58,092:INFO:Set up data.
2025-05-29 13:21:58,125:INFO:Set up index.
2025-05-29 13:31:12,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:31:12,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:31:12,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 13:31:12,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 15:53:04,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 15:53:04,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 15:53:04,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 15:53:04,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:07:28,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:07:28,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:07:28,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:07:28,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:08:32,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:08:32,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:08:32,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:08:32,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:11:34,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:11:35,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:11:35,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:11:35,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:22:30,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:22:30,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:22:30,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:22:30,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:27:12,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:27:12,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:27:12,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:27:12,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:30:25,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:30:25,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:30:25,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:30:25,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:31:03,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:31:03,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:31:03,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:31:03,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:32:30,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:32:30,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:32:30,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:32:30,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:43:37,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:43:37,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:43:37,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:43:37,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:15,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:15,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:15,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:15,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:55,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:55,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:55,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:46:55,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:48:38,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:48:38,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:48:38,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:48:38,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:55:21,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:55:21,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:55:21,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:55:21,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:58:29,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:58:29,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:58:29,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:58:29,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-29 16:58:47,108:INFO:Initializing load_model()
2025-05-29 16:58:47,108:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:47,262:INFO:Initializing load_model()
2025-05-29 16:58:47,262:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:47,328:INFO:Initializing predict_model()
2025-05-29 16:58:47,329:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D49A7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D3491E40>)
2025-05-29 16:58:47,329:INFO:Checking exceptions
2025-05-29 16:58:47,329:INFO:Preloading libraries
2025-05-29 16:58:47,329:INFO:Set up data.
2025-05-29 16:58:47,367:INFO:Set up index.
2025-05-29 16:58:47,561:INFO:Initializing load_model()
2025-05-29 16:58:47,561:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:48,264:INFO:Initializing load_model()
2025-05-29 16:58:48,264:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:48,303:INFO:Initializing load_model()
2025-05-29 16:58:48,303:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:48,351:INFO:Initializing predict_model()
2025-05-29 16:58:48,351:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6E2BD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D4A011C0>)
2025-05-29 16:58:48,351:INFO:Checking exceptions
2025-05-29 16:58:48,351:INFO:Preloading libraries
2025-05-29 16:58:48,351:INFO:Set up data.
2025-05-29 16:58:48,388:INFO:Set up index.
2025-05-29 16:58:48,566:INFO:Initializing load_model()
2025-05-29 16:58:48,566:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:48,612:INFO:Initializing predict_model()
2025-05-29 16:58:48,612:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232AD537910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D4A14180>)
2025-05-29 16:58:48,612:INFO:Checking exceptions
2025-05-29 16:58:48,612:INFO:Preloading libraries
2025-05-29 16:58:48,612:INFO:Set up data.
2025-05-29 16:58:48,632:INFO:Set up index.
2025-05-29 16:58:48,812:INFO:Initializing load_model()
2025-05-29 16:58:48,812:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:48,855:INFO:Initializing predict_model()
2025-05-29 16:58:48,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D34FDB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD558400>)
2025-05-29 16:58:48,855:INFO:Checking exceptions
2025-05-29 16:58:48,855:INFO:Preloading libraries
2025-05-29 16:58:48,855:INFO:Set up data.
2025-05-29 16:58:48,881:INFO:Set up index.
2025-05-29 16:58:49,057:INFO:Initializing load_model()
2025-05-29 16:58:49,057:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:49,106:INFO:Initializing predict_model()
2025-05-29 16:58:49,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6DEC2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D4A14180>)
2025-05-29 16:58:49,107:INFO:Checking exceptions
2025-05-29 16:58:49,107:INFO:Preloading libraries
2025-05-29 16:58:49,107:INFO:Set up data.
2025-05-29 16:58:49,131:INFO:Set up index.
2025-05-29 16:58:49,292:INFO:Initializing load_model()
2025-05-29 16:58:49,292:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:49,340:INFO:Initializing predict_model()
2025-05-29 16:58:49,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D3798510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD558400>)
2025-05-29 16:58:49,341:INFO:Checking exceptions
2025-05-29 16:58:49,341:INFO:Preloading libraries
2025-05-29 16:58:49,341:INFO:Set up data.
2025-05-29 16:58:49,400:INFO:Set up index.
2025-05-29 16:58:49,565:INFO:Initializing load_model()
2025-05-29 16:58:49,565:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:49,616:INFO:Initializing predict_model()
2025-05-29 16:58:49,616:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6D67C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD533F60>)
2025-05-29 16:58:49,616:INFO:Checking exceptions
2025-05-29 16:58:49,616:INFO:Preloading libraries
2025-05-29 16:58:49,616:INFO:Set up data.
2025-05-29 16:58:49,639:INFO:Set up index.
2025-05-29 16:58:49,797:INFO:Initializing load_model()
2025-05-29 16:58:49,797:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:49,850:INFO:Initializing predict_model()
2025-05-29 16:58:49,850:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232AE72C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD558400>)
2025-05-29 16:58:49,850:INFO:Checking exceptions
2025-05-29 16:58:49,850:INFO:Preloading libraries
2025-05-29 16:58:49,850:INFO:Set up data.
2025-05-29 16:58:49,871:INFO:Set up index.
2025-05-29 16:58:50,028:INFO:Initializing load_model()
2025-05-29 16:58:50,028:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:50,069:INFO:Initializing predict_model()
2025-05-29 16:58:50,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D4A3BA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD533F60>)
2025-05-29 16:58:50,069:INFO:Checking exceptions
2025-05-29 16:58:50,069:INFO:Preloading libraries
2025-05-29 16:58:50,069:INFO:Set up data.
2025-05-29 16:58:50,106:INFO:Set up index.
2025-05-29 16:58:50,264:INFO:Initializing load_model()
2025-05-29 16:58:50,264:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:50,310:INFO:Initializing predict_model()
2025-05-29 16:58:50,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6E2BD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD558400>)
2025-05-29 16:58:50,311:INFO:Checking exceptions
2025-05-29 16:58:50,311:INFO:Preloading libraries
2025-05-29 16:58:50,311:INFO:Set up data.
2025-05-29 16:58:50,320:INFO:Set up index.
2025-05-29 16:58:50,488:INFO:Initializing load_model()
2025-05-29 16:58:50,488:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:50,540:INFO:Initializing predict_model()
2025-05-29 16:58:50,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6E49B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D49EBB00>)
2025-05-29 16:58:50,540:INFO:Checking exceptions
2025-05-29 16:58:50,540:INFO:Preloading libraries
2025-05-29 16:58:50,540:INFO:Set up data.
2025-05-29 16:58:50,561:INFO:Set up index.
2025-05-29 16:58:50,722:INFO:Initializing load_model()
2025-05-29 16:58:50,722:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:50,770:INFO:Initializing predict_model()
2025-05-29 16:58:50,770:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D3522350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AD533F60>)
2025-05-29 16:58:50,770:INFO:Checking exceptions
2025-05-29 16:58:50,770:INFO:Preloading libraries
2025-05-29 16:58:50,771:INFO:Set up data.
2025-05-29 16:58:50,782:INFO:Set up index.
2025-05-29 16:58:50,968:INFO:Initializing load_model()
2025-05-29 16:58:50,969:INFO:load_model(model_name=models\top_model_3_ExtraTreesRegressor, platform=None, authentication=None, verbose=True)
2025-05-29 16:58:51,000:INFO:Initializing predict_model()
2025-05-29 16:58:51,000:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000232D6A67C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['project_prf_year_of_project',
                                             'project_prf_functional_size',
                                             'project_prf_max_team_size',
                                             'process_pmf_docs',
                                             'tech_tf_tools_used',
                                             'people_prf_personnel_changes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['external_eef_i...
                                             'external_eef_organisation_type',
                                             'project_prf_application_type'],
                                    transformer=OneHotEncoder(cols=['external_eef_industry_sector',
                                                                    'external_eef_organisation_type',
                                                                    'project_prf_application_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232D6E40680>)
2025-05-29 16:58:51,000:INFO:Checking exceptions
2025-05-29 16:58:51,000:INFO:Preloading libraries
2025-05-29 16:58:51,000:INFO:Set up data.
2025-05-29 16:58:51,040:INFO:Set up index.
